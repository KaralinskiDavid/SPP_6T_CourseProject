// <auto-generated />
using System;
using Dao.Impl.DaoModels.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LearningAssistant.Migrations.Dao
{
    [DbContext(typeof(DaoContext))]
    partial class DaoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dao.Impl.DaoModels.DaySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("DaySchedules");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Faculty", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Faculties");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Group", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Course")
                        .HasColumnType("int");

                    b.Property<int?>("HeadStudentId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeadStudentId");

                    b.HasIndex("SpecialityId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Auditory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DayScheduleId")
                        .HasColumnType("int");

                    b.Property<string>("LessonTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LessonTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SubGroup")
                        .HasColumnType("int");

                    b.Property<string>("SubjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DayScheduleId");

                    b.HasIndex("LessonTypeId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.LessonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LessonTypes");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("RefreshTokenValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId")
                        .IsUnique();

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Abbreviature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacultyId")
                        .HasColumnType("int");

                    b.Property<int?>("HeadStudentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.HasIndex("HeadStudentId")
                        .IsUnique()
                        .HasFilter("[HeadStudentId] IS NOT NULL");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<int?>("SubGroup")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.DaySchedule", b =>
                {
                    b.HasOne("Dao.Impl.DaoModels.Schedule", "Schedule")
                        .WithMany("DaySchedules")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Group", b =>
                {
                    b.HasOne("Dao.Impl.DaoModels.Student", "Student")
                        .WithMany()
                        .HasForeignKey("HeadStudentId");

                    b.HasOne("Dao.Impl.DaoModels.Speciality", "Speciality")
                        .WithMany("Groups")
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Speciality");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Lesson", b =>
                {
                    b.HasOne("Dao.Impl.DaoModels.DaySchedule", "DaySchedule")
                        .WithMany("Lessons")
                        .HasForeignKey("DayScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dao.Impl.DaoModels.LessonType", "LessonType")
                        .WithMany()
                        .HasForeignKey("LessonTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DaySchedule");

                    b.Navigation("LessonType");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Schedule", b =>
                {
                    b.HasOne("Dao.Impl.DaoModels.Group", "Group")
                        .WithOne("Schedule")
                        .HasForeignKey("Dao.Impl.DaoModels.Schedule", "GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Speciality", b =>
                {
                    b.HasOne("Dao.Impl.DaoModels.Faculty", "Faculty")
                        .WithMany("Specialities")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dao.Impl.DaoModels.Student", "HeadStudent")
                        .WithOne("Speciality")
                        .HasForeignKey("Dao.Impl.DaoModels.Speciality", "HeadStudentId");

                    b.Navigation("Faculty");

                    b.Navigation("HeadStudent");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Student", b =>
                {
                    b.HasOne("Dao.Impl.DaoModels.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.DaySchedule", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Faculty", b =>
                {
                    b.Navigation("Specialities");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Group", b =>
                {
                    b.Navigation("Schedule");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Schedule", b =>
                {
                    b.Navigation("DaySchedules");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Speciality", b =>
                {
                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Dao.Impl.DaoModels.Student", b =>
                {
                    b.Navigation("Speciality");
                });
#pragma warning restore 612, 618
        }
    }
}
